---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: backend-pv-volume
  labels:
    type: local
spec:
  storageClassName: localmanual
  capacity:
    storage: 256Mi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data/backend"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: backend-pv-claim
spec:
  storageClassName: localmanual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 256Mi
  # volumeName: backend-pv-volume   # Dodane, aby PVC używało konkretnego PV

---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
spec:
  selector:
    app: backend
  ports:
    - protocol: TCP
      port: 3001
      targetPort: 3001
  type: LoadBalancer

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      volumes:
        - name: backend-pv-storage
          persistentVolumeClaim:
            claimName: backend-pv-claim
      containers:
        - name: backend-api
          image: siwy630/backend-api-image:2.0
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              memory: "800Mi"
              cpu: "500m"
          ports:
            - containerPort: 3001
          volumeMounts:
            - mountPath: "/app/public/Images"
              name: backend-pv-storage
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongo-secret
                  key: mongo-root-username
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongo-secret
                  key: mongo-root-password
            - name: ME_CONFIG_MONGODB_SERVER
              valueFrom:
                configMapKeyRef:
                  name: mongo-configmap
                  key: database_url
              
